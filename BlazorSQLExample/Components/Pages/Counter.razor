@* The following addition to the page will make the endpoint for any "int" value added to the path valid... *@
@page "/counter/{initialCount:int?}"
@rendermode InteractiveServer

<PageTitle>Counter Page</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>
<MyButton OnClick="IncrementCount" class="btn btn-success" style="border-radius:10px;">MyButton</MyButton>

<div class="mt-5">
    <input @bind="clrText" @bind:event="oninput" @bind:after="Search">
    <button @onclick="OnClick">Clear</button>
    <p></p>
    <p>@clrText</p>
    <p>@searchResult</p>
</div>

<div class="mt-3">
    <input @oninput="OnInput">
    <p>@inputText</p>
</div>

<div class="mt-3" style="background-color:lightblue" @onmouseover="MouseOver" @onmouseout="MouseOut">
    @divText

</div>

<div class="mt-3">
    <p>initialCount=@InitialCount</p>
</div>

@if (currentCount > 3)
{
    <div class="mt-3">
        <p>You win!</p>
    </div>
}

@code {

    private int currentCount = 0;

    string inputText = "";
    string divText = "Mouse out";
    string clrText = "";
    string searchResult = "";

    protected override void OnInitialized()
    {
        currentCount = InitialCount;
    }

    [Parameter]
    public int InitialCount { get; set; }

    private void IncrementCount(MouseEventArgs e) => currentCount++;

    private void OnInput(ChangeEventArgs e) => inputText = (string)e.Value!;

    private void MouseOver(MouseEventArgs e) => divText = "Mouse Over";

    private void MouseOut(MouseEventArgs e) => divText = "Mouse Out";

    private void OnChange(ChangeEventArgs e)
    {
        clrText = (string)e.Value!;
    }
    private void OnClick(MouseEventArgs e)
    {
        clrText = "";
        searchResult = "";
    }

    async Task Search()
    {
        searchResult = "Searching...";
        await Task.Delay(250);
        searchResult = $"Found {Random.Shared.Next()} results!";
    }
}
